"""create tables

Revision ID: a2897c539275
Revises: 
Create Date: 2025-05-30 14:42:01.109862

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2897c539275'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batteries_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_brands_id'), 'batteries_brands', ['id'], unique=False)
    op.create_table('batteries_suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_suppliers_id'), 'batteries_suppliers', ['id'], unique=False)
    op.create_table('inverters_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inverters_brands_id'), 'inverters_brands', ['id'], unique=False)
    op.create_table('inverters_suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inverters_suppliers_id'), 'inverters_suppliers', ['id'], unique=False)
    op.create_table('solar_panels_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_panels_brands_id'), 'solar_panels_brands', ['id'], unique=False)
    op.create_table('solar_panels_suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_panels_suppliers_id'), 'solar_panels_suppliers', ['id'], unique=False)
    op.create_table('batteries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('c_amps', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('polarity', sa.String(), nullable=False),
    sa.Column('electrolyte', sa.String(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['batteries_brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_id'), 'batteries', ['id'], unique=False)
    op.create_table('inverters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('power', sa.Float(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('inverter_type', sa.String(), nullable=False),
    sa.Column('generation', sa.String(), nullable=False),
    sa.Column('string_count', sa.Integer(), nullable=False),
    sa.Column('firmware', sa.String(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['inverters_brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inverters_id'), 'inverters', ['id'], unique=False)
    op.create_table('solar_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('power', sa.Float(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('panel_type', sa.String(), nullable=False),
    sa.Column('cell_type', sa.String(), nullable=False),
    sa.Column('thickness', sa.Float(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['solar_panels_brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_panels_id'), 'solar_panels', ['id'], unique=False)
    op.create_table('batteries_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('battery_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['battery_id'], ['batteries.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['batteries_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_prices_id'), 'batteries_prices', ['id'], unique=False)
    op.create_table('batteries_prices_current',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('battery_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['battery_id'], ['batteries.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['batteries_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_prices_current_id'), 'batteries_prices_current', ['id'], unique=False)
    op.create_table('inverters_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('inverter_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inverter_id'], ['inverters.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['inverters_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inverters_prices_id'), 'inverters_prices', ['id'], unique=False)
    op.create_table('inverters_prices_current',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('inverter_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inverter_id'], ['inverters.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['inverters_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inverters_prices_current_id'), 'inverters_prices_current', ['id'], unique=False)
    op.create_table('solar_panels_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['panel_id'], ['solar_panels.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['solar_panels_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_panels_prices_id'), 'solar_panels_prices', ['id'], unique=False)
    op.create_table('solar_panels_prices_current',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['panel_id'], ['solar_panels.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['solar_panels_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_panels_prices_current_id'), 'solar_panels_prices_current', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_solar_panels_prices_current_id'), table_name='solar_panels_prices_current')
    op.drop_table('solar_panels_prices_current')
    op.drop_index(op.f('ix_solar_panels_prices_id'), table_name='solar_panels_prices')
    op.drop_table('solar_panels_prices')
    op.drop_index(op.f('ix_inverters_prices_current_id'), table_name='inverters_prices_current')
    op.drop_table('inverters_prices_current')
    op.drop_index(op.f('ix_inverters_prices_id'), table_name='inverters_prices')
    op.drop_table('inverters_prices')
    op.drop_index(op.f('ix_batteries_prices_current_id'), table_name='batteries_prices_current')
    op.drop_table('batteries_prices_current')
    op.drop_index(op.f('ix_batteries_prices_id'), table_name='batteries_prices')
    op.drop_table('batteries_prices')
    op.drop_index(op.f('ix_solar_panels_id'), table_name='solar_panels')
    op.drop_table('solar_panels')
    op.drop_index(op.f('ix_inverters_id'), table_name='inverters')
    op.drop_table('inverters')
    op.drop_index(op.f('ix_batteries_id'), table_name='batteries')
    op.drop_table('batteries')
    op.drop_index(op.f('ix_solar_panels_suppliers_id'), table_name='solar_panels_suppliers')
    op.drop_table('solar_panels_suppliers')
    op.drop_index(op.f('ix_solar_panels_brands_id'), table_name='solar_panels_brands')
    op.drop_table('solar_panels_brands')
    op.drop_index(op.f('ix_inverters_suppliers_id'), table_name='inverters_suppliers')
    op.drop_table('inverters_suppliers')
    op.drop_index(op.f('ix_inverters_brands_id'), table_name='inverters_brands')
    op.drop_table('inverters_brands')
    op.drop_index(op.f('ix_batteries_suppliers_id'), table_name='batteries_suppliers')
    op.drop_table('batteries_suppliers')
    op.drop_index(op.f('ix_batteries_brands_id'), table_name='batteries_brands')
    op.drop_table('batteries_brands')
    # ### end Alembic commands ###
