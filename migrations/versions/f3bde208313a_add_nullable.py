"""add nullable

Revision ID: f3bde208313a
Revises: 206e5ffe722a
Create Date: 2025-06-06 15:11:52.155079

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f3bde208313a'
down_revision: Union[str, None] = '206e5ffe722a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('batteries', 'c_amps',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('batteries', 'electrolyte',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inverters', 'power',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('inverters', 'inverter_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inverters', 'generation',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('inverters', 'string_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('solar_panels', 'power',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('solar_panels', 'panel_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('solar_panels', 'cell_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('solar_panels', 'thickness',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('solar_panels', 'panel_color',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('solar_panels', 'frame_color',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('solar_panels', 'brand_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('solar_panels', 'brand_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('solar_panels', 'frame_color',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('solar_panels', 'panel_color',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('solar_panels', 'thickness',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('solar_panels', 'cell_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('solar_panels', 'panel_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('solar_panels', 'power',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('inverters', 'string_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('inverters', 'generation',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inverters', 'inverter_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('inverters', 'power',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('batteries', 'electrolyte',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('batteries', 'c_amps',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
